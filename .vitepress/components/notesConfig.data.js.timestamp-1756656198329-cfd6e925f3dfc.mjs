// .vitepress/components/notesConfig.data.js
import fs from "node:fs";

// .tnotes.json
var repoName = "TNotes.canvas";
var ignore_dirs = [
  ".vscode",
  "0000",
  "assets",
  "node_modules",
  "hidden",
  "demos",
  "assets"
];

// .vitepress/components/constants.js
var IGNORE_DIRS = ignore_dirs;
var NOTES_DIR_KEY = "NOTES_DIR_KEY__" + repoName;
var NOTES_VIEW_KEY = "NOTES_VIEW_KEY__" + repoName;
var EN_WORD_LIST_COMP_IS_AUTO_SHOW_CARD = "EN_WORD_LIST_COMP_IS_AUTO_SHOW_CARD__" + repoName;
var TOC = "TOC";
var TOC_MD = TOC + ".md";

// .vitepress/components/notesConfig.data.js
var notesConfig_data_default = {
  // 监听笔记目录下的 .tnotes.json 文件变化
  watch: ["../../notes/**/.tnotes.json"],
  load(watchedFiles) {
    const allNotesConfig = {};
    watchedFiles.forEach((filePath) => {
      try {
        const dirName = filePath.split("/").slice(-2, -1)[0];
        if (IGNORE_DIRS.includes(dirName)) {
          console.log(`Skipping ignored directory: ${dirName}`);
          return;
        }
        const fileContent = fs.readFileSync(filePath, "utf-8");
        const configData = JSON.parse(fileContent);
        const noteIdMatch = filePath.match(/notes\/(\d{4})\./);
        if (noteIdMatch) {
          const noteId = noteIdMatch[1];
          const redirect = filePath.replace(/\.tnotes\.json$/, "README");
          allNotesConfig[noteId] = {
            ...configData,
            redirect
          };
        }
      } catch (error) {
        console.error(`Failed to load config file: ${filePath}`, error);
      }
    });
    return allNotesConfig;
  }
};
export {
  notesConfig_data_default as default
};
//# sourceMappingURL=data:application/json;base64,
